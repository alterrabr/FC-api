swagger: "2.0"
info:
  version: "1.0"
  title: "FC basic api"

paths:

  /user/register/{username}{userID}:
    post:
      tags:
      - "Users"
      description: "Register user"
      operationId: "registerUser"
      parameters:
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
      - name: "userID"
        in: "path"
        description: "User ID (steam/google/apple IDs)"
        required: true
        type: "string"
      produces:
      - "application/json"
      responses:
        "200":
          description: "return token"
          schema:
            type: "string"
            default: "~"
            
  /user/login/{userID}:
    post:
      tags:
      - "Users"
      description: "Login user"
      operationId: "loginUser"
      parameters:
      - name: "userID"
        in: "path"
        description: "User ID (steam/google/apple IDs)"
        required: true
        type: "string"
      produces:
      - "application/json"
      responses:
        "200":
          description: "return token"
          schema:
            type: "string"
            default: "~"
            
  /user/rename/{username}{newUsername}:
    post:
      tags:
      - "Users"
      description: "Login user"
      operationId: "renameUser"
      parameters:
      - name: "username"
        in: "path"
        description: "Current username"
        required: true
        type: "string"
      - name: "newUsername"
        in: "path"
        description: "New username"
        required: true
        type: "string"
      produces:
      - "application/json"
      responses:
        "200":
          description: "return result"
          schema:
            type: "string"
            default: "ok"
              
  /user/getLeaderboard/{challengeID}:
    get:
      tags:
      - "Leaderboards"
      description: "Get top-10 users from specified challenge leaderboard"
      operationId: "getLeaderboard"
      parameters:
      - name: "challengeID"
        in: "path"
        description: "Specified challenge ID"
        required: true
        type: "integer"
      produces:
      - "application/json"
      responses:
        "200":
          description: "return result"
          schema:
            type: "array"
            items: 
              $ref: "#/definitions/Leaderboard"
            
  /user/getUserScore/{username}{challengeID}:
    get:
      tags:
      - "Leaderboards"
      description: "Get user's score and position in specified challenge"
      operationId: "getUserScore"
      parameters:
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
      - name: "challengeID"
        in: "path"
        description: "Specified challenge ID"
        required: true
        type: "integer"
      produces:
      - "application/json"
      responses:
        "200":
          description: "return user score"
          schema:
            type: "integer"
            default: "0"
            
  /user/setUserScore/{username}{challengeID}{score}:
    post:
      tags:
      - "Leaderboards"
      description: "Set user's score in specified challenge"
      operationId: "setUserScore"
      parameters:
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
      - name: "challengeID"
        in: "path"
        description: "Specified challenge ID"
        required: true
        type: "integer"
      - name: "score"
        in: "path"
        description: "User's score"
        required: true
        type: "integer"
      produces:
      - "application/json"
      responses:
        "200":
          description: "return result"
          schema:
            type: "string"
            default: "ok"
            
  /mayor/getMayor/{cityID}:
    get:
      tags:
      - "Mayors"
      description: "Get mayor of specified city"
      operationId: "getMayor"
      produces:
      - "application/json"
      parameters:
      - name: "cityID"
        in: "path"
        description: "Specified city ID"
        required: true
        type: "integer"
      responses:
        "200":
          description: "return username of mayor"
          schema:
            type: "string"
            default: {username}
            
  /mayor/setMayor/{cityID}{username}:
    post:
      tags:
      - "Mayors"
      description: "Set mayor of specified city"
      operationId: "setMayor"
      produces:
      - "application/json"
      parameters:
      - name: "cityID"
        in: "path"
        description: "Specified city ID"
        required: true
        type: "integer"
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
      responses:
        "200":
          description: "return result"
          schema:
            type: "string"
            default: "ok"
            
  /mayor/getMayors:
    post:
      tags:
      - "Mayors"
      description: "Get all mayors"
      operationId: "getMayors"
      produces:
      - "application/json"
      responses:
        "200":
          description: "return all mayors array"
          schema:
            type: "array"
            items: 
              $ref: "#/definitions/Mayors"
              
  /mayor/getUserCoins/{username}:
    get:
      tags:
      - "Coins"
      description: "Get coins for specified user"
      operationId: "getUserCoins"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
      responses:
        "200":
          description: "return amount of coins"
          schema:
            type: "integer"
            default: 0
        
  /mayor/setUserCoins/{username}{coins}:
      post:
        tags:
        - "Coins"
        description: "Set coins for specified user"
        operationId: "setUserCoins"
        produces:
        - "application/json"
        parameters:
        - name: "username"
          in: "path"
          description: "Username"
          required: true
          type: "string"
        - name: "coins"
          in: "path"
          description: "Coins amount to add"
          required: true
          type: "integer"
        responses:
          "200":
            description: "return amount of coins"
            schema:
              type: "integer"
              default: 0
              
  /orders/{username}{amount}:
    post:
      tags:
      - "Coins"
      description: "Set user's order"
      operationId: "order"
      parameters:
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
      - name: "amount"
        in: "path"
        description: "Amount of coins in order"
        required: true
        type: "integer"
      produces:
      - "application/json"
      responses:
        "200":
          description: "return result"
          schema:
            type: "string"
            default: "ok"
            
  /spendings/{username}{type}{amount}:
    post:
      tags:
      - "Coins"
      description: "Set user's spending"
      operationId: "spending"
      parameters:
      - name: "username"
        in: "path"
        description: "Username"
        required: true
        type: "string"
      - name: "type"
        in: "path"
        description: "Spending type"
        required: true
        type: "string"
      - name: "amount"
        in: "path"
        description: "Amount of coins in order"
        required: true
        type: "integer"
      produces:
      - "application/json"
      responses:
        "200":
          description: "return result"
          schema:
            type: "string"
            default: "ok"

definitions:
  Mayors:
    type: "object"
    properties:
      cityID:
        type: "integer"
      username:
        type: "string"
  Leaderboard:
    type: "object"
    properties:
      username:
        type: "string"
      score:
        type: "integer"